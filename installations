# Setup Kubernetes (K8s) Cluster on AWS


1. Create EC2 Batson instance
1. install AWSCLI
   ```sh
    curl https://s3.amazonaws.com/aws-cli/awscli-bundle.zip -o awscli-bundle.zip
    yum install unzip python -y
    unzip awscli-bundle.zip
    #sudo apt-get install unzip - if you dont have unzip in your system
    ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
    ```

1. Install kubectl on Linux instance
   ```sh
   curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    chmod +x ./kubectl
    sudo mv ./kubectl /usr/local/bin/kubectl
   ```

1. Install kops on Linux instance
   ```sh
    curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
    chmod +x kops-linux-amd64
    sudo mv kops-linux-amd64 /usr/local/bin/kops
    ```
1. Create an IAM user/role  with Route53, EC2, IAM and S3 full access

1. Attach IAM role to Linux instance
   ```sh
   # Note: If you create IAM user with programmatic access then provide Access keys. Otherwise region information is enough
   aws configure
    ```

1. Create a Route53 private hosted zone (you can create Public hosted zone if you have a domain)
   ```sh
   Routeh53 --> hosted zones --> created hosted zone  
   Domain Name: manojy.co.in
   Type: Private hosted zone for Amzon VPC
   ```

1. create an S3 bucket
   ```sh
    aws s3 mb s3://demo.k8s.manojy.co.in
   ```
1. Expose environment variable:
   ```sh
    export KOPS_STATE_STORE=s3://demo.k8s.manojy.co.in
   ```

1. Create sshkeys before creating cluster
   ```sh
    ssh-keygen
   ```

1. Create kubernetes cluster definitions on S3 bucket
   ```sh
   kops create cluster --cloud=aws --zones=ap-south-1a --name=demo.k8s.manojy.co.in --dns-zone=manojy.co.in --dns private 
    ```
    or

    kops create cluster --cloud=aws --name=demo.manojy.co.in --state=s3://demo.manojy.co.in --associate-public-ip=false --topology=private --networking=weave --zones=ap-south-1b --node-count=1 --node-size=t2.micro --master-size=t2.micro --dns-zone=devopsk8.net --vpc=vpc-id --network-cidr=cidr
    
   or

   kops create cluster --cloud=aws --master-zones=us-east-1a,us-east-1b,us-east-1c --zones=us-east-1a,us-east-1b,us-east-1c --node-count=2 --node-size=t2.micro --master-size=t2.micro ${NAME}

    or

   kops create cluster --cloud=aws --master-zones=ap-south-1a,ap-south-1b,ap-south-1c --zones=ap-south-1a,ap-south-1b,ap-south-1c --node-count=2 --node-size=t2.micro --master-size=t2.micro --name=demo.manojy.co.in --state=s3://demo.manojy.co.in --dns-zone=manojy.co.in --dns private

1. Create kubernetes cluser
    ```sh
    kops update cluster demo.k8s.manojy.co.in --yes
    ```

        Suggestions:
        * list clusters with: kops get cluster
        * edit this cluster with: kops edit cluster demo.k8s.manojy.co.in
        * edit your node instance group: kops edit ig --name=demo.k8s.manojy.co.in nodes
        * edit your master instance group: kops edit ig --name=demo.k8s.manojy.co.in master-ap-south-1a
        Finally configure your cluster with: kops update cluster --name demo.k8s.manojy.co.in --yes


         Suggestions:
         * validate cluster: kops validate cluster
         * list nodes: kubectl get nodes --show-labels
         * ssh to the master: ssh -i ~/.ssh/id_rsa admin@api.demo.devopsk8.net
         * the admin user is specific to Debian. If not using Debian please use the appropriate user based on your OS.
         * read about installing addons at: https://github.com/kubernetes/kops/blob/master/docs/operations/addons.md.




1. Validate your cluster
     ```sh
      kops validate cluster
    ```

1. To list nodes
   ```sh
   kubectl get nodes
   ```

1. To delete cluster
    ```sh
     kops delete cluster demo.k8s.manojy.co.in --yes
    ```
